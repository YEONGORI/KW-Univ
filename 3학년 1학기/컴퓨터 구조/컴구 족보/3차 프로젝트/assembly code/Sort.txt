Variables
s0 = n, s1 = arr[i], s2 = arr[j], s3 = arr[min], r0 = 0
t0 = n-1, t1 = i, t2 = j, t3 = min_idx
s0 = r1 s1 = r2 s2 = r3 s3 = r4
t0 = r5 t1 = r6 t2 = r7 t3 = r8
Sort:	NOP					
	addi $s0, $s0. 40			# n = 10, s0 = n * 4, addi r1 r1 40
NOP 2
	addi $t0, $s0, -4 			# t0 = (n-1) * 4
	addi $t1, $t1, 0 			# i = 0
	addi $s1, $r0, baseaddress		# s1 = address a[0]	
	addi $s2, $r0, baseaddress		# s2 = address a[0]
	addi $s3, $r0, baseaddress		# s3 = address a[0]

LOOP1:	beq $t0, $t1, END	 		# if i = n-1, goto END
NOP 2
	addi $t3, $t1, 0			# t3 = min_idx = i
	addi $t2, $t1, 4			# t2 = t1 + 4 (j = i + 1)
	addi $s1, $t1, baseaddr			# addr of arr[i]
	addi $s3, $t3, baseaddr			# addr of arr[min]

LOOP2:	beq $s0, $t2, Swap			# if j == n => Exit
NOP 2
	addi $s2, $t2, baseaddr			# addr of arr[j]
NOP 1
	lw $s5, ($s3)				# s5 = arr[min]	
	lw $s6, ($s2)				# s6 = arr[j]	
NOP 2
	slt $s7, $s5, $s6			# if arr[min] < arr[j], s7 = 1
NOP 2
	beq $s7, $r0, Continue			# if s7 == 0,  goto continue
	addi $t3, $t2, 0			# min = j

Continue:addi $t2, $t2, 4			# j++
NOP 1
	j LOOP2

Swap:	beq $t3, $t1, Continue2		# if min == i goto Continue2
	addi $s3, $t3, baseaddress	#s3 = address arr[min]
NOP 2
	lw $s5, ($s3)			# s5 = arr[min]
	lw $s7, ($s1)			# s7 = arr[i]	
NOP 2	
	sw $s7, ($s3)			# arr[min] = s7
	sw $s5, ($s1)			# arr[i] = s5

Continue2: addi $t1, $t1, 4			# i++
NOP 1
	j LOOP1

END:
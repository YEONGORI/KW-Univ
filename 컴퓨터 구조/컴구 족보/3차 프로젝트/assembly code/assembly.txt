s0 = r1 s1 = r2 s2 = r3 s3 = r4 s5 = r11 s6 = r12 s7 = r13
t0 = r5 t1 = r6 t2 = r7 t3 = r8 t4 = r9 t5 = r10 t7 = r14
¹è¿­ = 5, 1, 2, 8, 7, 6, 9, 4, 3, 10

Sort:	NOP										0
	addi $r1, $r1, 10
NOP 2
	addi $r5, $r1, -1 			#r5 = n - 1
	addi $r6, $r6, 0 			# i = 0
	addi $r2, $r0, baseaddress		#r2 = address a[0]
	addi $r3, $r0, baseaddress		#r3 = address a[0]
	addi $r4, $r0, baseaddress		#r3 = address a[0]

LOOP1:	beq $r5, $r6, END	 		# i > n - 1				9
NOP 2
	addi $r7, $r6, 0			# r7 = min,
	addi $r2, $r0, baseaddress		# r2 = address array
	addi $r3, $r0, baseaddress		# r3 = address array
	sll $r8, $r7, 2			# r8 = min * 4
NOP 2
	add $r3, $r3, $r8			# get index address arr[min]
	sll $r8, $r6, 2			# r8 = i * 4
NOP 2
	add $r2, $r2, $r8			# get index address arr[i]
	addi $r9, $r6, 0			# r9 = j; j = i
NOP 2
	addi $r9, $r9, 1			# j = j + 1
NOP 2

LOOP2:	beq $r1, $r9, Swap			# j > n = > Exit			29
NOP 2
	addi $r4, $r0, baseaddress 		# r4 = address array
	lw $r11, ($r3)			# r11 = arr[min]
	sll $r10, $r9, 2			# temp5 = j * 4
NOP 2
	add $r4, $r4, $r10			# get index address arr[j]
NOP 2
	lw $r12, ($r4)			# r12 = arr[j]
NOP 2
	slt $r13, $r11, $r12			# arr[min] <= arr[j] goto continue
NOP 2
	beq $r13, $r0, Continue								46
NOP 2
	addi $r7, $r9, 0			# min = j
	add $r3, $r4, $0			# index min = index j

Continue : addi $r9, $r9, 1			# j++					51
NOP 1
	j LOOP2

Swap :	beq $r7, $r6, Continue2		# min != i goto Continue2			54
NOP 2
	lw $r11, ($r3)			# r11 = arr[min]
	lw $r14, ($r2)			# r14 = arr[i]
NOP 2
	sw $r14, ($r3)			# arr[min] = r14
	sw $r11, ($r2)			# arr[i] = r11

Continue2 : addi $r6, $r6, 1			# i++					63
NOP 1
	j LOOP1

END :											66